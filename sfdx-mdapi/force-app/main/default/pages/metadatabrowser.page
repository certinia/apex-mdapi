<!--
/**
 * Copyright (c) 2012, FinancialForce.com, inc
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, 
 *   are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice, 
 *      this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice, 
 *      this list of conditions and the following disclaimer in the documentation 
 *      and/or other materials provided with the distribution.
 * - Neither the name of the FinancialForce.com, inc nor the names of its contributors 
 *      may be used to endorse or promote products derived from this software without 
 *      specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
 *  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
 *  THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 *  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**/
-->
<apex:page sidebar="false">
	<link rel="stylesheet" href="{!URLFOR($Resource.extjs, 'resources/css/ext-all.css')}"/>
	<script type="text/javascript" src="{!URLFOR($Resource.extjs, 'ext-all-debug.js')}"></script>
	<script>
		Ext.onReady(function() {
		    var store = Ext.create('Ext.data.TreeStore', {
		        proxy: {
		            type: 'ajax',
		            url: '{!$Page.metadatadata}'
		        },
		        sorters: [{
		            property: 'leaf',
		            direction: 'ASC'
		        }, {
		            property: 'text',
		            direction: 'ASC'
		        }]
		    });
		
		    var tree = Ext.create('Ext.tree.Panel', {
		        store: store,
		        rootVisible: false,
		        useArrows: true,
		        frame: true,
		        title: 'Metadata Components',
		        renderTo: '{!$Component.appcanvas}',
		        width: 1000,
		        height: 500,
		        dockedItems: [{
		            xtype: 'toolbar',
		            items: {
		                text: 'Retrieve',
		                handler: function(){
		                    var records = tree.getView().getChecked(),
		                        names = [];
		                    
		                    Ext.Array.each(records, function(rec){
		                        names.push(rec.get('text'));
		                    });
		                    
		                    Ext.MessageBox.show({
		                        title: 'Selected Nodes',
		                        msg: names.join('<br />'),
		                        icon: Ext.MessageBox.INFO
		                    });
		                }
		            }
		        }]
		    });
		    
		    tree.on('checkchange', 
		    	function(node, checked, eOpts) 
	    		{
					Ext.each(node.childNodes, 
						function(child) 
						{
							child.set('checked', checked); 
						});
				});
		});
	</script>
	<apex:outputPanel id="appcanvas"/>  
</apex:page>